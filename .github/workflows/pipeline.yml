name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set Image Tag
        run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag swimpyblaq92/chima:${{ env.IMAGE_TAG }}

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push swimpyblaq92/chima:${{ env.IMAGE_TAG }}

    outputs:
      IMAGE_TAG: ${{ env.IMAGE_TAG }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo -e "${{ secrets.VM_SSH_KEY }}" > ~/.ssh/github-action-key
          chmod 600 ~/.ssh/github-action-key
          ls -la ~/.ssh

      - name: Test SSH Connection
        env:
          SSH_KEY: ${{ secrets.VM_SSH_KEY }}
        run: |
          if [ -z "$SSH_KEY" ]; then
            echo "Error: SSH key is empty!"
            exit 1
          fi
          ssh -i ~/.ssh/github-action-key -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "whoami"

      - name: Deploy to VM using SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -e  
            
            echo "Ensuring Docker is installed and running..."
            sudo systemctl start docker || true

            echo "Pulling latest image..."
            docker pull swimpyblaq92/chima:${{ needs.build.outputs.IMAGE_TAG }}

            echo "Stopping and removing existing container..."
            docker stop my_app_container || true
            docker rm my_app_container || true

            echo "Cleaning up old Docker images..."
            docker system prune -f || true

            echo "Starting new container..."
            docker run -d --name my_app_container -p 80:80 swimpyblaq92/chima:${{ needs.build.outputs.IMAGE_TAG }}
